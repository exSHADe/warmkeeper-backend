{"version":3,"sources":["app/shared/components/Fire/index.tsx","app/shared/components/VideoBackground/index.tsx","app/shared/components/Title/index.tsx","app/redux/user/userSlice.ts","app/shared/components/PrivateRoute/index.tsx","app/shared/components/LoadingIndicator/index.tsx","app/shared/components/ErrorBoundary/index.tsx","app/shared/components/Menu/index.tsx","app/shared/components/Furnance/FurnanceWrapper.tsx","app/redux/furnance/furnanceSlice.ts","app/shared/components/Furnance/SensorFlipCard.tsx","app/redux/appSettings/appSettingsSlice.ts","app/shared/components/Furnance/FurnanceInfo.tsx","app/shared/components/Skeleton/index.tsx","app/shared/components/Modal/index.tsx","app/pages/Login/index.tsx","app/assets/vids/fire2.mp4","app/pages/NotFound/index.tsx","app/pages/Panel/index.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Fire","className","VideoBackground","autoPlay","muted","videoSource","videoLoop","console","log","loop","src","type","Title","children","size","color","userSlice","createSlice","name","initialState","status","token","hubId","user","reducers","logout","state","loginRequest","loginSuccess","action","payload","loginFailure","actions","getToken","getLoginFetchStatus","PrivateRoute","props","useSelector","path","exact","component","to","React","Component","Menu","isHidden","menuItems","match","useRouteMatch","map","item","isExact","activeClassName","text","onClick","e","preventDefault","FurnanceWrapper","furnance","history","useHistory","id","sensors","push","sensor","img","furnanceSlice","furnances","numberOfSkeletons","loadFurnancesRequest","loadFurnancesSuccess","loadFurnancesFailure","setIdle","getFurnances","getStatus","getNumberOfSkeletons","SensorFlipCard","useState","isFlipped","setIsFlipped","ResponsiveContainer","width","height","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","fill","appSettingsSlice","modal","isVisible","setModal","hideModal","getModal","appSettings","FurnanceInfo","useParams","dispatch","useDispatch","find","getFurnanceById","isAdvancedViewToggled","setIsAdvancedViewToggled","fontSize","style","Skeleton","icons","iconsArr","useMemo","Array","_","Icon","Modal","onClose","onOpen","ReactDOM","createPortal","document","getElementById","Login","useForm","register","handleSubmit","errors","LoadingIndicator","onSubmit","a","fetch","method","body","JSON","stringify","response","json","fullname","password","email","placeholder","ref","required","username","value","campfire","Panel","toggled","setToggled","useEffect","setTimeout","date","toggle","Switch","App","NotFound","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","userReducer","furnanceReducer","appSettingsReducer","Boolean","window","location","hostname","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4hBAqBeA,EAnBF,kBACX,0BAASC,UAAU,OAAnB,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cACf,qBAAKA,UAAU,qBAEjB,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cACf,qBAAKA,UAAU,qBAEjB,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,cACf,qBAAKA,UAAU,qBAEjB,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,oBCSNC,G,OAlBS,SAAC,GAKI,IAAD,IAJ1BC,gBAI0B,aAH1BC,aAG0B,SAF1BC,EAE0B,EAF1BA,YAE0B,EAD1BC,UAGA,OADAC,QAAQC,IAAIH,GAEV,uBACEJ,UAAU,UACVE,SAAUA,EACVC,MAAOA,EACPK,MAAI,EAJN,SAME,wBAAQC,IAAKL,EAAaM,KAAK,kBCRtBC,G,cAPD,SAAC,GAII,IAHjBC,EAGgB,EAHhBA,SAGgB,IAFhBC,YAEgB,MAFT,MAES,MADhBC,aACgB,MADR,aACQ,EAChB,OAAO,oBAAId,UAAS,uBAAkBa,EAAlB,mBAAiCC,GAA9C,SAAwDF,M,yCCiD3DG,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAxCmB,CACnBC,OAAQ,OACRC,MAAO,KACPC,MAAO,KACPC,KAAM,MAqCNC,SAAU,CACRC,OAAQ,SAACC,GACPA,EAAMJ,MAAQ,KACdI,EAAML,MAAQ,KACdK,EAAMH,KAAO,MAEfI,aAAc,SAACD,GACbA,EAAMN,OAAS,UACfM,EAAML,MAAQ,KACdK,EAAMJ,MAAQ,KACdI,EAAMH,KAAO,MAEfK,aAAc,SAACF,EAAOG,GAAmC,IAAD,EACvBA,EAAOC,QAA9BT,EAD8C,EAC9CA,MAAOC,EADuC,EACvCA,MAAOC,EADgC,EAChCA,KACtBG,EAAMN,OAAS,UACfM,EAAMJ,MAAQA,EACdI,EAAML,MAAQA,EACdK,EAAMH,KAAOA,GAEfQ,aAAc,SAACL,GACbA,EAAMN,OAAS,UACfM,EAAML,MAAQ,KACdK,EAAMJ,MAAQ,KACdI,EAAMH,KAAO,S,EAMjBP,EAAUgB,QADGD,E,EAAAA,aAAcH,E,EAAAA,aAAcD,E,EAAAA,aAG9BM,G,EAH4CR,OAGjC,SAACC,GAAD,OAAsBA,EAAMH,KAAKF,QAE5Ca,EAAsB,SAACR,GAAD,OAAsBA,EAAMH,KAAKH,QACrDJ,IAAf,QChFemB,EATV,SAACC,GAGJ,OAFcC,YAAYJ,GAGxB,cAAC,IAAD,CAAOK,KAAMF,EAAME,KAAMC,MAAOH,EAAMG,MAAOC,UAAWJ,EAAMI,YAE9D,cAAC,IAAD,CAAUC,GAAG,O,oCCbF,GCMaC,IAAMC,U,ODNnB,WACb,OACE,sBAAK1C,UAAU,WAAf,UACE,wBACA,wBACA,wBACA,6BE4CS2C,G,OAvCF,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAiD,IAAvCC,iBAAuC,MAA3B,GAA2B,EAC3DC,EAAQC,YAAc,uBAE1B,OADAzC,QAAQC,IAAIuC,GAEV,qBAAK9C,UAAS,cAAS4C,EAAW,gBAAkB,IAApD,SACGC,EAAUG,KAAI,SAACC,GACd,MAAgB,oBAAZA,EAAKT,GAEL,cAAC,IAAD,CAEEF,MAAOW,EAAKC,QACZlD,UAAU,YACVmD,gBAAgB,oBAChBX,GAAIS,EAAKT,GALX,SAOGS,EAAKG,MANDH,EAAKG,MAUZN,EAEA,cAAC,IAAD,CAEEO,QAAS,SAACC,GACRA,EAAEC,kBAEJjB,MAAOW,EAAKC,QACZlD,UAAU,YACVmD,gBAAgB,oBAChBX,GAAIS,EAAKT,GARX,SAUGS,EAAKG,MATDH,EAAKG,WAHhB,SCCOI,G,OAtBS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SACnBC,EAAUC,cACR1C,EAAsBwC,EAAtBxC,KAAM2C,EAAgBH,EAAhBG,GAAIC,EAAYJ,EAAZI,QAIlB,OACE,0BAAS7D,UAAU,WAAWqD,QAJT,WACrBK,EAAQI,KAAR,0BAAgCF,KAGhC,UACE,yBAAS5D,UAAU,oDAAnB,SACE,oBAAIA,UAAU,kBAAd,SAAiCiB,MAEnC,yBAASjB,UAAU,oBAAnB,SACG6D,EAAQb,KAAI,SAACe,EAAOH,GAAR,OACX,sBAAsC5D,UAAU,iBAAhD,UACE,oBAAIA,UAAU,sBAAd,SAAqC+D,EAAO5C,SAC5C,qBAAKnB,UAAU,gBAAgBS,IAAKsD,EAAOC,QAF7C,UAAaD,EAAO9C,KAApB,gBAAgC2C,c,QC2FpCK,EAAgBjD,YAAY,CAChCC,KAAM,WACNC,aAlHmB,CACnBC,OAAQ,OACR+C,UAAW,GACXC,kBAAmB,GAgHnB5C,SAAU,CACR6C,qBAAsB,SAAC3C,GACrBA,EAAMyC,UAAY,GAClBzC,EAAM0C,kBAAoB,EAC1B1C,EAAMN,OAAS,WAEjBkD,qBAAsB,SAAC5C,EAAOG,GAC5BH,EAAMN,OAAS,UACfM,EAAMyC,UAAYtC,EAAOC,QAAQqC,UACjCzC,EAAM0C,kBAAoB,MAE5BG,qBAAsB,SAAC7C,GACrBA,EAAMyC,UAAY,GAClBzC,EAAMN,OAAS,UACfM,EAAM0C,kBAAoB,MAE5BI,QAAS,SAAC9C,GACRA,EAAMN,OAAS,OACfM,EAAMyC,UAAY,GAClBzC,EAAM0C,kBAAoB,S,EAQ5BF,EAAclC,QAFhBsC,G,EADAC,qB,EACAD,sBACAD,E,EAAAA,qBAGWI,EAAe,SAAC/C,GAAD,OAAsBA,EAAMgC,SAASS,WACpDO,EAAY,SAAChD,GAAD,OAAsBA,EAAMgC,SAAStC,QACjDuD,EAAuB,SAACjD,GAAD,OAClCA,EAAMgC,SAASU,mBAGFF,IAAf,Q,8DC/FeU,EAzCQ,SAAC,GAAqC,IAAnCZ,EAAkC,EAAlCA,OAAkC,EACxBa,oBAAkB,GADM,mBACnDC,EADmD,KACxCC,EADwC,KAE1D,OACE,yBAAS9E,UAAU,uBAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBACEA,UAAS,0BAAqB6E,EAAY,YAAc,IACxDxB,QAAS,kBAAMyB,GAAcD,IAF/B,UAIE,sBAAK7E,UAAU,kBAAf,iBAAkC+D,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAQ9C,KAA1C,WAAiD8C,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAQ5C,UACzD,qBAAKnB,UAAU,iBAAf,SACE,cAAC+E,EAAA,EAAD,CAAqBC,MAAM,MAAMC,OAAQ,IAAzC,SACE,eAACC,EAAA,EAAD,CACEF,MAAO,IACPC,OAAQ,IACRE,KAAI,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAQoB,KACdC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACErF,KAAK,WACLkF,QAAQ,QACRI,OAAO,UACPC,KAAK,2B,qCC9BjBC,GAAmBlF,YAAY,CACnCC,KAAM,cACNC,aARmB,CACnBiF,MAAO,CACLC,WAAW,IAOb7E,SAAU,CACR8E,SAAU,SAAC5E,EAAOG,GAChBH,EAAM0E,MAAQvE,EAAOC,SAEvByE,UAAW,SAAC7E,GACVA,EAAM0E,MAAQ,CAAEC,WAAW,O,GAIMF,GAAiBnE,QAAzCsE,G,GAAAA,SAAUC,G,GAAAA,UACVJ,MAAf,QACaK,GAAW,SAAC9E,GAAD,OAAsBA,EAAM+E,YAAYL,OCajDM,GArCM,WAAO,IAClB7C,EAAO8C,cAAP9C,GACF+C,EAAWC,cACXnD,EAAWrB,YH4IY,SAACwB,GAAD,OAAgB,SAACnC,GAAD,OAC7CA,EAAMgC,SAASS,UAAU2C,MAAK,SAACpD,GAAD,OAAcA,EAASG,IAAMA,MG7I9BkD,CAAgBlD,IAHpB,EAIiCgB,oBACxD,GALuB,mBAIlBmC,EAJkB,KAIKC,EAJL,KAOzB,OACE,0BAAShH,UAAU,eAAnB,UACE,0BAASA,UAAU,0BAAnB,UACE,oCAAKyD,QAAL,IAAKA,OAAL,EAAKA,EAAUxC,OACf,0BAASjB,UAAU,sBAAnB,UACE,cAAC,KAAD,CACEiH,SAAS,QACT5D,QAAS,kBAAM2D,GAA0BD,MAE3C,cAAC,IAAD,CACEE,SAAS,QACT5D,QAAS,WACPsD,EAASN,GAAS,CAAED,WAAW,EAAMxF,SAAU,kEAKtDmG,GACC,oBAAIG,MAAO,CAAEpG,MAAO,SAApB,iCAEAiG,IAAD,OACCtD,QADD,IACCA,OADD,EACCA,EAAUI,QAAQb,KAAI,SAACe,EAAQH,GAAT,OACpB,cAAC,EAAD,CAEEG,OAAQA,GAFV,UACUH,EADV,qBACyBG,EAAO9C,eClB3BkG,I,OAfE,SAAC,GAAmC,IAAD,IAAhCC,aAAgC,MAAxB,EAAwB,EAC5CC,EAAWC,mBAAQ,kBAAM,IAAIC,MAAMH,GAAOnB,KAAK,MAAK,CAACmB,IAC3D,OACE,0BAASpH,UAAU,mBAAnB,UACE,yBAASA,UAAU,oEAAnB,SACE,oBAAIA,UAAU,8BAEhB,yBAASA,UAAU,4BAAnB,SACGqH,EAASrE,KAAI,SAACwE,EAAG5D,GAAJ,OACZ,cAAC,GAAD,GAAWA,aAOf6D,GAAO,kBAAM,qBAAKzH,UAAU,4B,qBCQnB0H,I,OApBD,SAAC,GAA0D,IAAxDtB,EAAuD,EAAvDA,UAA4BxF,GAA2B,EAA5C+G,QAA4C,EAAnCC,OAAmC,EAA3BhH,UACrC+F,EAAWC,cAEjB,OAAOR,EACHyB,IAASC,aACP,sBAAK9H,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,KAAD,CACEiH,SAAS,QACT5D,QAAS,WACPsD,EAASL,WAId1F,EAAU,OAEbmH,SAASC,eAAe,WAE1B,O,UCqDSC,GApED,WACZ,IAAMtB,EAAWC,cACXxF,EAAQgB,YAAYJ,GACpBb,EAASiB,YAAYH,GAHT,EAIyBiG,eAAnCC,EAJU,EAIVA,SAAUC,EAJA,EAIAA,aAAcC,EAJd,EAIcA,OAIhC,OACE,0BAASrI,UAAU,QAAnB,UACGoB,GAAS,cAAC,IAAD,CAAUoB,GAAG,WACvB,uBAAOxC,UAAU,cAAjB,SACE,cAAC,EAAD,MAEF,yBAASA,UAAU,eAAnB,SACc,YAAXmB,EACC,cAACmH,EAAD,IAEA,uBAAMtI,UAAU,cAAcuI,SAAUH,GAb/B,SAACjD,GZalB,IAAC7D,EYZCqF,GZYDrF,EYZoB6D,EZYrB,uCACA,WAAOwB,GAAP,eAAA6B,EAAA,6DACE7B,EAASjF,KACTpB,QAAQC,IAAIe,GAFd,kBAI2BmH,MAAM,kCAAmC,CAC9DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUvH,KAN3B,OAIUwH,EAJV,YASYA,EAAS3H,OATrB,OAUW,MAVX,wCAW2B2H,EAASC,OAXpC,sBAYQpC,EACEhF,EAAa,CACXP,MAAO,KACPC,MAAO,KACPC,KAAM,CAAEsC,GAAI,EAAGoF,SAAU,IAAKC,SAAU,MAAOC,MAAO,cAhBlE,oCAqBQvC,EAAS7E,KArBjB,+EAyBIxB,QAAQC,IAAI,oBACZoG,EAAS7E,KA1Bb,0DADA,2DYAQ,UACE,uBACE9B,UAAU,eACVU,KAAK,OACLkD,GAAG,WACH3C,KAAK,WACLkI,YAAY,QACZC,IAAKjB,EAAS,CAAEkB,UAAU,MAG5B,sBACErJ,UAAS,yBACPqI,EAAOiB,UAAqC,aAAzBjB,EAAOiB,SAAS5I,KAC/B,WACA,YAJR,2BAUA,uBACEV,UAAU,eACVU,KAAK,WACLkD,GAAG,WACH3C,KAAK,WACLkI,YAAY,aACZC,IAAKjB,EAAS,CAAEkB,UAAU,MAG5B,sBACErJ,UAAS,yBACPqI,EAAOY,UAAqC,aAAzBZ,EAAOY,SAASvI,KAC/B,WACA,YAJR,2BAUA,uBACEA,KAAK,SACLV,UAAU,8HACVuJ,MAAM,qBCxEL,OAA0B,kCCO1B,I,OAAA,WACb,OACE,0BAASvJ,UAAU,WAAnB,UACE,cAAC,EAAD,CAAiBI,YAAaoJ,KAC9B,sBAAKxJ,UAAU,qBAAf,UACE,cAAC,EAAD,mEACA,cAAC,IAAD,CACEA,UAAU,iIACVwC,GAAG,IAFL,+B,6BC0EOiH,GAtED,WACZ,IAAM9C,EAAWC,cADC,EAEYhC,oBAAkB,GAF9B,mBAEX8E,EAFW,KAEFC,EAFE,KAGZxI,EAASiB,YAAYqC,GACrBN,EAAoB/B,YAAYsC,GAChCR,EAAY9B,YAAYoC,GACxB2B,EAAQ/D,YAAYmE,IAK1B,OAJAjG,QAAQC,IAAI4D,GACZyF,qBAAU,WACRjD,GTK0C,SAACA,GAC7CA,EAASvC,KAGTyF,YAAW,WACTlD,EACEtC,EAAqB,CACnBH,UAAW,CACT,CACEN,GAAI,EACJ3C,KAAM,aACN4C,QAAS,CACP,CACE5C,KAAM,cACNE,OAAQ,OACR6C,IACE,uEACFmB,KAAM,CACJ,CAAE2E,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,QAKhC,CACE3F,GAAI,EACJ3C,KAAM,aACN4C,QAAS,CACP,CACE5C,KAAM,cACNE,OAAQ,OACR6C,IACE,uEACFmB,KAAM,CACJ,CAAE2E,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,QAKhC,CACE3F,GAAI,EACJ3C,KAAM,gBACN4C,QAAS,CACP,CACE5C,KAAM,cACNE,OAAQ,OACR6C,IACE,uEACFmB,KAAM,CACJ,CAAE2E,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,IACxB,CAAEO,KAAM,QAASP,MAAO,cAQrC,US9EA,IAED,0BAASvJ,UAAS,gBAAWmG,EAAMC,UAAY,UAAY,IAA3D,UACE,cAAC,GAAD,CAAOA,UAAWD,EAAMC,UAAxB,SACE,sCAEF,yBAASpG,UAAU,aAAnB,SACE,cAAC,KAAD,CAAW+J,OAAQJ,EAAYD,QAASA,MAE1C,0BAAS1J,UAAU,gBAAnB,UACE,yBAASA,UAAU,sBAAnB,SACE,cAAC,EAAD,CACE4C,UAAW8G,EACX7G,UAAW,CACT,CAAEL,GAAI,SAAUU,SAAS,EAAME,KAAM,QACrC,CAAEZ,GAAI,kBAAmBU,SAAS,EAAOE,KAAM,QAC/C,CACEZ,GAAI,yBACJU,SAAS,EACTE,KAAM,qCAER,CAAEZ,GAAI,iBAAkBU,SAAS,EAAME,KAAM,UAC7C,CAAEZ,GAAI,gBAAiBU,SAAS,EAAME,KAAM,gBAIlD,yBACEpD,UAAS,+BAA2B0J,EAA4B,GAAlB,iBADhD,SAGE,eAACM,GAAA,EAAD,WACE,eAAC,IAAD,CAAO1H,OAAK,EAACD,KAAK,SAAlB,UACc,YAAXlB,GACC,IAAIoG,MAAM,GAAGtB,KAAK,IAAIjD,KAAI,SAACwE,EAAG5D,GAAJ,OAAW,cAAC,GAAD,GAAeA,MAC1C,YAAXzC,GACC+C,EAAUlB,KAAI,SAACS,GAAD,OACZ,cAAC,EAAD,CAAiBA,SAAUA,GAAeA,EAASG,OAE3C,YAAXzC,GAAwB,+DAE3B,cAAC,IAAD,CAAOkB,KAAK,sBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,yBAAZ,SACE,0CAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,0CAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,kDAKR,qBAAKrC,UAAU,mBAAf,SACE,kDCxDOiK,OAlBf,WACE,OACE,cAAC,IAAD,UACE,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3H,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAcC,OAAO,EAAOD,KAAK,SAASE,UAAWkH,KACrD,cAAC,IAAD,UACE,cAACS,GAAD,cCPCC,GAAenJ,YAAY,CACtCC,KAAM,UACNC,aANiC,CACjCqI,MAAO,GAMPhI,SAAU,CACR6I,UAAW,SAAA3I,GAKTA,EAAM8H,OAAS,GAEjBc,UAAW,SAAA5I,GACTA,EAAM8H,OAAS,GAGjBe,kBAAmB,SAAC7I,EAAOG,GACzBH,EAAM8H,OAAS3H,EAAOC,Y,GAK+BsI,GAAapI,QAiBzDoI,I,GAjBAC,U,GAAWC,U,GAAWC,kBAiBtBH,GAAf,SC3CaI,GAAQC,YAAe,CAClCC,QAAS,CACPC,QAASC,GACTrJ,KAAMsJ,EACNnH,SAAUoH,EACVrE,YAAYsE,MCCIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpI,MACvB,2DCVN+E,IAASsD,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJxC,SAASC,eAAe,SD0HpB,kBAAmBqD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtL,QAAQsL,MAAMA,EAAMC,c","file":"static/js/main.b2f4a1b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Fire = () => (\r\n  <section className=\"fire\">\r\n    <div className=\"fire-left\">\r\n      <div className=\"main-fire\"></div>\r\n      <div className=\"particle-fire\"></div>\r\n    </div>\r\n    <div className=\"fire-main\">\r\n      <div className=\"main-fire\"></div>\r\n      <div className=\"particle-fire\"></div>\r\n    </div>\r\n    <div className=\"fire-right\">\r\n      <div className=\"main-fire\"></div>\r\n      <div className=\"particle-fire\"></div>\r\n    </div>\r\n    <div className=\"fire-bottom\">\r\n      <div className=\"main-fire\"></div>\r\n    </div>\r\n  </section>\r\n);\r\nexport default Fire;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\ninterface VideoBackgroundProps {\r\n  videoSource: string;\r\n  videoLoop?: boolean;\r\n  muted?: boolean;\r\n  autoPlay?: boolean;\r\n}\r\nconst VideoBackground = ({\r\n  autoPlay = true,\r\n  muted = true,\r\n  videoSource,\r\n  videoLoop,\r\n}: VideoBackgroundProps) => {\r\n  console.log(videoSource);\r\n  return (\r\n    <video\r\n      className=\"videoBG\"\r\n      autoPlay={autoPlay}\r\n      muted={muted}\r\n      loop\r\n    >\r\n      <source src={videoSource} type=\"video/mp4\"></source>\r\n    </video>\r\n  );\r\n};\r\nexport default VideoBackground;\r\n","import React from \"react\";\r\nimport './styles.scss'\r\ninterface TitleProps {\r\n  children: string;\r\n  size?: \"vvbig\" | \"vbig\" | \"big\" | \"normal\" | \"small\" | \"vsmall\" | \"vvsmall\";\r\n  color?: \"orangeLight\" | \"orangeDark\" | \"blackDark\" | \"blackLight\";\r\n}\r\nconst Title = ({\r\n  children,\r\n  size = \"big\",\r\n  color = \"orangeDark\",\r\n}: TitleProps) => {\r\n  return <h2 className={`title title--${size} title--${color}`}>{children}</h2>;\r\n};\r\nexport default Title;\r\n","import { SwapVerticalCircleSharp } from \"@material-ui/icons\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../store\";\r\n\r\ntype User = {\r\n  id: number;\r\n  fullname: string;\r\n  password: string;\r\n  email: string;\r\n};\r\n\r\ninterface UserVM {\r\n  token: string | null;\r\n  hubId: string | null;\r\n  user: User | null;\r\n}\r\ninterface UserState {\r\n  status: \"idle\" | \"request\" | \"success\" | \"failure\";\r\n  token: string | null;\r\n  hubId: string | null;\r\n  user: User | null;\r\n}\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  token: null,\r\n  hubId: null,\r\n  user: null,\r\n} as UserState;\r\nexport const fetchUser =\r\n  (user: LoginProps): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(loginRequest());\r\n    console.log(user);\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/api/login\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user),\r\n      });\r\n\r\n      switch (response.status) {\r\n        case 200:\r\n          const data = await response.json();\r\n          dispatch(\r\n            loginSuccess({\r\n              token: \"XD\",\r\n              hubId: \"X2\",\r\n              user: { id: 1, fullname: \"M\", password: \"pwd\", email: \"m@m.com\" },\r\n            })\r\n          );\r\n          break;\r\n        default:\r\n          dispatch(loginFailure());\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(\"An error occured\");\r\n      dispatch(loginFailure());\r\n    }\r\n  };\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.hubId = null;\r\n      state.token = null;\r\n      state.user = null;\r\n    },\r\n    loginRequest: (state) => {\r\n      state.status = \"request\";\r\n      state.token = null;\r\n      state.hubId = null;\r\n      state.user = null;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<UserVM>) => {\r\n      const { token, hubId, user } = action.payload;\r\n      state.status = \"success\";\r\n      state.hubId = hubId;\r\n      state.token = token;\r\n      state.user = user;\r\n    },\r\n    loginFailure: (state) => {\r\n      state.status = \"failure\";\r\n      state.token = null;\r\n      state.hubId = null;\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginFailure, loginSuccess, loginRequest, logout } =\r\n  userSlice.actions;\r\nexport const getUser = (state: RootState) => state.user;\r\nexport const getToken = (state: RootState) => state.user.token;\r\nexport const getHubId = (state: RootState) => state.user.hubId;\r\nexport const getLoginFetchStatus = (state: RootState) => state.user.status;\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getToken } from \"../../../redux/user/userSlice\";\r\n\r\nconst PrivateRoute: React.FC<{\r\n  component: React.FC;\r\n  path: string;\r\n  exact: boolean;\r\n}> = (props) => {\r\n  const token = useSelector(getToken);\r\n\r\n  return token ? (\r\n    <Route path={props.path} exact={props.exact} component={props.component} />\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nexport default () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\ninterface ErrorBoundaryProps {\r\n  children: React.ReactNode;\r\n}\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n}\r\nclass ErrorBoundary extends React.Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(err: any): ErrorBoundaryState {\r\n    return { hasError: true };\r\n  }\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n    //toast.error(\"Napotkano niespodziewany błąd\",{onClose:()=>{this.props.history.push(\"/\")}})\r\n    console.log(error, errorInfo);\r\n    this.setState({ hasError: true });\r\n  }\r\n  render(): React.ReactNode {\r\n    switch (this.state.hasError) {\r\n      case true:\r\n        return <h1>Zastępcze UI</h1>;\r\n      default:\r\n        return this.props.children;\r\n    }\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\n\r\ninterface MenuItem {\r\n  text: string;\r\n  to: string;\r\n  isExact?: boolean;\r\n}\r\ninterface MenuWrapperProps {\r\n  isHidden: boolean;\r\n  menuItems?: Array<MenuItem>;\r\n}\r\nconst Menu = ({ isHidden, menuItems = [] }: MenuWrapperProps) => {\r\n  let match = useRouteMatch(\"/panel/furnance/:id\");\r\n  console.log(match);\r\n  return (\r\n    <nav className={`nav ${isHidden ? \"translateX100\" : \"\"}`}>\r\n      {menuItems.map((item: MenuItem) => {\r\n        if (item.to !== \"/panel/furnance\") {\r\n          return (\r\n            <NavLink\r\n              key={item.text}\r\n              exact={item.isExact}\r\n              className=\"nav__link\"\r\n              activeClassName=\"nav__link--active\"\r\n              to={item.to}\r\n            >\r\n              {item.text}\r\n            </NavLink>\r\n          );\r\n        }\r\n        if (match) {\r\n          return (\r\n            <NavLink\r\n              key={item.text}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n              exact={item.isExact}\r\n              className=\"nav__link\"\r\n              activeClassName=\"nav__link--active\"\r\n              to={item.to}\r\n            >\r\n              {item.text}\r\n            </NavLink>\r\n          );\r\n        }\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport SettingsPowerIcon from \"@material-ui/icons/SettingsPower\";\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport { Furnance } from \"../../../redux/furnance/furnanceSlice\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface FurnanceWrapperProperties {\r\n  furnance: Furnance;\r\n}\r\nconst FurnanceWrapper = ({ furnance }: FurnanceWrapperProperties) => {\r\n  const history = useHistory();\r\n  const { name, id, sensors } = furnance;\r\n  const handleRedirect = () => {\r\n    history.push(`/panel/furnance/${id}`);\r\n  };\r\n  return (\r\n    <section className=\"furnance\" onClick={handleRedirect}>\r\n      <section className=\"furnance__section furnance__section--justifyRight\">\r\n        <h1 className=\"furnance__title\">{name}</h1>\r\n      </section>\r\n      <section className=\"furnance__section\">\r\n        {sensors.map((sensor,id) => (\r\n          <div key={`${sensor.name}&ASD^${id}`} className=\"furnance__icon\">\r\n            <h5 className=\"furnance__iconTitle\">{sensor.status}</h5>\r\n            <img className=\"furnance__img\" src={sensor.img} />\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default FurnanceWrapper;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../store\";\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  furnances: [],\r\n  numberOfSkeletons: 6,\r\n} as FurnanceState;\r\ninterface FurnanceVM {\r\n  furnances: Array<Furnance>;\r\n}\r\ninterface FurnanceState {\r\n  status: \"idle\" | \"request\" | \"success\" | \"failure\";\r\n  furnances: Array<Furnance>;\r\n  numberOfSkeletons: number | null;\r\n}\r\nexport interface Furnance {\r\n  id: number;\r\n  name: string;\r\n  sensors: Array<Sensor>;\r\n}\r\nexport interface Sensor {\r\n  name: string;\r\n  status: string;\r\n  img: string;\r\n  data: Array<SensorData>;\r\n}\r\nexport interface SensorData {\r\n  date: string;\r\n  value: number;\r\n}\r\nexport const fetchFurnances = (): AppThunk => (dispatch) => {\r\n  dispatch(loadFurnancesRequest());\r\n\r\n  //odkomentuj gdy chcesz mieć stan success\r\n  setTimeout(() => {\r\n    dispatch(\r\n      loadFurnancesSuccess({\r\n        furnances: [\r\n          {\r\n            id: 1,\r\n            name: \"super piec\",\r\n            sensors: [\r\n              {\r\n                name: \"Temperatura\",\r\n                status: \"72 C\",\r\n                img:\r\n                  \"https://cdn.iconscout.com/icon/free/png-256/temperature-5-106113.png\",\r\n                data: [\r\n                  { date: \"12:00\", value: 72 },\r\n                  { date: \"12:05\", value: 80 },\r\n                  { date: \"12:10\", value: 90 },\r\n                  { date: \"12:15\", value: 90 },\r\n                  { date: \"12:20\", value: 90 },\r\n                  { date: \"12:25\", value: 91 },\r\n                  { date: \"12:30\", value: 92 },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            id: 2,\r\n            name: \"Piec u Eli\",\r\n            sensors: [\r\n              {\r\n                name: \"Temperatura\",\r\n                status: \"73 C\",\r\n                img:\r\n                  \"https://cdn.iconscout.com/icon/free/png-256/temperature-5-106113.png\",\r\n                data: [\r\n                  { date: \"12:00\", value: 72 },\r\n                  { date: \"12:05\", value: 80 },\r\n                  { date: \"12:10\", value: 90 },\r\n                  { date: \"12:15\", value: 90 },\r\n                  { date: \"12:20\", value: 90 },\r\n                  { date: \"12:25\", value: 91 },\r\n                  { date: \"12:30\", value: 92 },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            id: 3,\r\n            name: \"Piec na WIMII\",\r\n            sensors: [\r\n              {\r\n                name: \"Temperatura\",\r\n                status: \"12 C\",\r\n                img:\r\n                  \"https://cdn.iconscout.com/icon/free/png-256/temperature-5-106113.png\",\r\n                data: [\r\n                  { date: \"12:00\", value: 72 },\r\n                  { date: \"12:05\", value: 80 },\r\n                  { date: \"12:10\", value: 90 },\r\n                  { date: \"12:15\", value: 90 },\r\n                  { date: \"12:20\", value: 90 },\r\n                  { date: \"12:25\", value: 91 },\r\n                  { date: \"12:30\", value: 92 },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      })\r\n    );\r\n  }, 2000);\r\n  /*\r\n   // odkomentuj gdy chcesz miec stan failure\r\n  setTimeout(() => {\r\n    dispatch(\r\n      loadFurnancesSuccess({ furnances: [{ name: \"super piec\", sensors: [] }] })\r\n    );\r\n  }, 2000);\r\n  */\r\n};\r\nconst furnanceSlice = createSlice({\r\n  name: \"furnance\",\r\n  initialState,\r\n  reducers: {\r\n    loadFurnancesRequest: (state) => {\r\n      state.furnances = [];\r\n      state.numberOfSkeletons = 5;\r\n      state.status = \"request\";\r\n    },\r\n    loadFurnancesSuccess: (state, action: PayloadAction<FurnanceVM>) => {\r\n      state.status = \"success\";\r\n      state.furnances = action.payload.furnances;\r\n      state.numberOfSkeletons = null;\r\n    },\r\n    loadFurnancesFailure: (state) => {\r\n      state.furnances = [];\r\n      state.status = \"failure\";\r\n      state.numberOfSkeletons = null;\r\n    },\r\n    setIdle: (state) => {\r\n      state.status = \"idle\";\r\n      state.furnances = [];\r\n      state.numberOfSkeletons = null;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  loadFurnancesFailure,\r\n  loadFurnancesSuccess,\r\n  loadFurnancesRequest,\r\n} = furnanceSlice.actions;\r\n\r\nexport const getFurnances = (state: RootState) => state.furnance.furnances;\r\nexport const getStatus = (state: RootState) => state.furnance.status;\r\nexport const getNumberOfSkeletons = (state: RootState) =>\r\n  state.furnance.numberOfSkeletons;\r\nexport const getFurnanceById = (id: number) => (state: RootState) =>\r\n  state.furnance.furnances.find((furnance) => furnance.id == id);\r\nexport default furnanceSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { Sensor } from \"../../../redux/furnance/furnanceSlice\";\r\n\r\n\r\ninterface SensorFlipCardProps {\r\n  sensor?: Sensor;\r\n}\r\nconst SensorFlipCard = ({ sensor }: SensorFlipCardProps) => {\r\n  const [isFlipped, setIsFlipped] = useState<boolean>(false);\r\n  return (\r\n    <section className=\"furnanceInfo__sensor\">\r\n      <div className=\"flip-card\">\r\n        <div\r\n          className={`flip-card-inner ${isFlipped ? \"rotate180\" : \"\"}`}\r\n          onClick={() => setIsFlipped(!isFlipped)}\r\n        >\r\n          <div className=\"flip-card-front\">{sensor?.name} {sensor?.status}</div>\r\n          <div className=\"flip-card-back\">\r\n            <ResponsiveContainer width=\"90%\" height={180}>\r\n              <LineChart\r\n                width={500}\r\n                height={200}\r\n                data={sensor?.data}\r\n                margin={{\r\n                  top: 10,\r\n                  right: 30,\r\n                  left: 0,\r\n                  bottom: 0,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"2 2\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"value\"\r\n                  stroke=\"#ef5a00\"\r\n                  fill=\"#ef5a00\"\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default SensorFlipCard;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport React from \"react\";\r\nimport { AppThunk, RootState } from \"../../store\";\r\nexport interface Modal {\r\n  isVisible: boolean;\r\n  onClose?: Function;\r\n  onOpen?: Function;\r\n  children?: React.ReactNode;\r\n}\r\ninterface AppSettingsState {\r\n  modal: Modal;\r\n}\r\nconst initialState = {\r\n  modal: {\r\n    isVisible: true,\r\n  },\r\n} as AppSettingsState;\r\n\r\nconst appSettingsSlice = createSlice({\r\n  name: \"appSettings\",\r\n  initialState,\r\n  reducers: {\r\n    setModal: (state, action: PayloadAction<Modal>) => {\r\n      state.modal = action.payload;\r\n    },\r\n    hideModal: (state) => {\r\n      state.modal = { isVisible: false };\r\n    },\r\n  },\r\n});\r\nexport const { setModal, hideModal } = appSettingsSlice.actions;\r\nexport default appSettingsSlice.reducer;\r\nexport const getModal = (state: RootState) => state.appSettings.modal;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFurnanceById } from \"../../../redux/furnance/furnanceSlice\";\r\nimport SensorFlipCard from \"./SensorFlipCard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FilterNoneIcon from \"@material-ui/icons/FilterNone\";\r\nimport { setModal } from \"../../../redux/appSettings/appSettingsSlice\";\r\nconst FurnanceInfo = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const furnance = useSelector(getFurnanceById(id));\r\n  const [isAdvancedViewToggled, setIsAdvancedViewToggled] = useState<boolean>(\r\n    false\r\n  );\r\n  return (\r\n    <section className=\"furnanceInfo\">\r\n      <section className=\"furnanceInfo__titleArea\">\r\n        <h2>{furnance?.name}</h2>\r\n        <section className=\"furnanceInfo__icons\">\r\n          <FilterNoneIcon\r\n            fontSize=\"large\"\r\n            onClick={() => setIsAdvancedViewToggled(!isAdvancedViewToggled)}\r\n          />\r\n          <SettingsIcon\r\n            fontSize=\"large\"\r\n            onClick={() => {\r\n              dispatch(setModal({ isVisible: true, children: <div>Children as a props</div> }));\r\n            }}\r\n          />\r\n        </section>\r\n      </section>\r\n      {isAdvancedViewToggled && (\r\n        <h1 style={{ color: \"black\" }}>Zaawansowany Widok</h1>\r\n      )}\r\n      {!isAdvancedViewToggled &&\r\n        furnance?.sensors.map((sensor, id) => (\r\n          <SensorFlipCard\r\n            key={`${id}__sasda#@!${sensor.name}`}\r\n            sensor={sensor}\r\n          />\r\n        ))}\r\n    </section>\r\n  );\r\n};\r\nexport default FurnanceInfo;\r\n","import React, { useMemo } from \"react\";\r\nimport \"./styles.scss\";\r\ninterface ISkeletonProps {\r\n  icons?: number;\r\n}\r\nconst Skeleton = ({ icons = 5 }: ISkeletonProps) => {\r\n  const iconsArr = useMemo(() => new Array(icons).fill({}), [icons]);\r\n  return (\r\n    <section className=\"furnanceSkeleton\">\r\n      <section className=\"furnanceSkeleton__section furnanceSkeleton__section--justifyRight\">\r\n        <h1 className=\"furnanceSkeleton__title\"></h1>\r\n      </section>\r\n      <section className=\"furnanceSkeleton__section\">\r\n        {iconsArr.map((_, id) => (\r\n          <Icon key={id} />\r\n        ))}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default Skeleton;\r\nconst Icon = () => <div className=\"furnanceSkeleton__icon\" />;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  hideModal,\r\n  Modal as ModalProps,\r\n} from \"../../../redux/appSettings/appSettingsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst Modal = ({ isVisible, onClose, onOpen, children }: ModalProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return isVisible\r\n    ? ReactDOM.createPortal(\r\n        <div className=\"modal\">\r\n          <div className=\"modal__top\">\r\n            <CloseIcon\r\n              fontSize=\"large\"\r\n              onClick={() => {\r\n                dispatch(hideModal());\r\n              }}\r\n            />\r\n          </div>\r\n          {children}{\" \"}\r\n        </div>,\r\n        document.getElementById(\"portal\")!\r\n      )\r\n    : null;\r\n};\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Fire, LoadingIndicator } from \"../../shared/components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchUser,\r\n  getLoginFetchStatus,\r\n  getToken,\r\n} from \"../../redux/user/userSlice\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(getToken);\r\n  const status = useSelector(getLoginFetchStatus);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data: LoginProps) => {\r\n    dispatch(fetchUser(data));\r\n  };\r\n  return (\r\n    <section className=\"login\">\r\n      {token && <Redirect to=\"/panel\" />}\r\n      <aside className=\"login__left\">\r\n        <Fire />\r\n      </aside>\r\n      <section className=\"login__right\">\r\n        {status === \"request\" ? (\r\n          <LoadingIndicator />\r\n        ) : (\r\n          <form className=\"login__form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n              className=\"login__input\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"login\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <span\r\n              className={`login__warning ${\r\n                errors.username && errors.username.type === \"required\"\r\n                  ? \"opacity1\"\r\n                  : \"opacity0\"\r\n              }`}\r\n            >\r\n              Pole wymagane\r\n            </span>\r\n\r\n            <input\r\n              className=\"login__input\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"hasło\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <span\r\n              className={`login__warning ${\r\n                errors.password && errors.password.type === \"required\"\r\n                  ? \"opacity1\"\r\n                  : \"opacity0\"\r\n              }`}\r\n            >\r\n              Pole wymagane\r\n            </span>\r\n\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingBig btn--width50 btn--textCenter btn--fontNormal\"\r\n              value=\"Zaloguj\"\r\n            />\r\n          </form>\r\n        )}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/fire2.46c5d2dc.mp4\";","import React from \"react\";\r\nimport VideoBackground from \"../../shared/components/VideoBackground\";\r\nimport campfire from \"../../assets/vids/fire2.mp4\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../shared/components/Button/styles.scss\";\r\nimport { Title } from \"../../shared/components\";\r\nexport default () => {\r\n  return (\r\n    <section className=\"notFound\">\r\n      <VideoBackground videoSource={campfire} />\r\n      <div className=\"notFound__elements\">\r\n        <Title>Żądana strona nie została odnaleziona</Title>\r\n        <Link\r\n          className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingNormal btn--width50 btn--textCenter btn--fontNormal\"\r\n          to=\"/\"\r\n        >\r\n          Powrót\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Twirl as Hamburger } from \"hamburger-react\";\r\nimport { FurnanceWrapper, Menu, Modal } from \"../../shared/components\";\r\nimport \"./styles.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Switch from \"react-bootstrap/esm/Switch\";\r\nimport { Route } from \"react-router-dom\";\r\nimport {\r\n  fetchFurnances,\r\n  getFurnances,\r\n  getNumberOfSkeletons,\r\n  getStatus,\r\n} from \"../../redux/furnance/furnanceSlice\";\r\nimport Skeleton from \"../../shared/components/Skeleton\";\r\nimport { FurnanceInfo } from \"../../shared/components/Furnance\";\r\nimport { getModal } from \"../../redux/appSettings/appSettingsSlice\";\r\n\r\nconst Panel = () => {\r\n  const dispatch = useDispatch();\r\n  const [toggled, setToggled] = useState<boolean>(true);\r\n  const status = useSelector(getStatus);\r\n  const numberOfSkeletons = useSelector(getNumberOfSkeletons);\r\n  const furnances = useSelector(getFurnances);\r\n  const modal = useSelector(getModal);\r\n  console.log(numberOfSkeletons);\r\n  useEffect(() => {\r\n    dispatch(fetchFurnances());\r\n  }, []);\r\n  return (\r\n    <section className={`panel ${modal.isVisible ? \"blurred\" : \"\"}`}>\r\n      <Modal isVisible={modal.isVisible}>\r\n        <h1>XD</h1>\r\n      </Modal>\r\n      <section className=\"panel__top\">\r\n        <Hamburger toggle={setToggled} toggled={toggled} />\r\n      </section>\r\n      <section className=\"panel__middle\">\r\n        <section className=\"panel__middle--left\">\r\n          <Menu\r\n            isHidden={!toggled}\r\n            menuItems={[\r\n              { to: \"/panel\", isExact: true, text: \"Home\" },\r\n              { to: \"/panel/furnance\", isExact: false, text: \"Piec\" },\r\n              {\r\n                to: \"/panel/weatherForecast\",\r\n                isExact: true,\r\n                text: \"Sprawdź prognozę pogody\",\r\n              },\r\n              { to: \"/panel/profile\", isExact: true, text: \"Profil\" },\r\n              { to: \"/panel/logout\", isExact: true, text: \"Wyloguj\" },\r\n            ]}\r\n          />\r\n        </section>\r\n        <section\r\n          className={`panel__middle--right ${!toggled ? \" translateX14\" : \"\"}`}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/panel\">\r\n              {status === \"request\" &&\r\n                new Array(9).fill({}).map((_, id) => <Skeleton key={id} />)}\r\n              {status === \"success\" &&\r\n                furnances.map((furnance) => (\r\n                  <FurnanceWrapper furnance={furnance} key={furnance.id} />\r\n                ))}\r\n              {status === \"failure\" && <button>Spróbuj ponownie ! </button>}\r\n            </Route>\r\n            <Route path=\"/panel/furnance/:id\">\r\n              <FurnanceInfo />\r\n            </Route>\r\n            <Route path=\"/panel/weatherForecast\">\r\n              <h2>Pogoda</h2>\r\n            </Route>\r\n            <Route path=\"/panel/profile\">\r\n              <h2>Profil</h2>\r\n            </Route>\r\n            <Route path=\"/panel/logout\">\r\n              <h2>logout</h2>\r\n            </Route>\r\n          </Switch>\r\n        </section>\r\n      </section>\r\n      <div className=\"panel__top--time\">\r\n        <span>14:11:02</span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.scss\";\r\nimport \"./app/shared/styles/globalClasses.scss\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Login, NotFound, Panel } from \"./app/pages\";\r\nimport { PrivateRoute } from \"./app/shared/components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <PrivateRoute exact={false} path=\"/panel\" component={Panel} />\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport userReducer from \"./redux/user/userSlice\";\r\nimport furnanceReducer from \"./redux/furnance/furnanceSlice\";\r\nimport appSettingsReducer from \"./redux/appSettings/appSettingsSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    user: userReducer,\r\n    furnance: furnanceReducer,\r\n    appSettings:appSettingsReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}